---
- name: Prepare nodes for Kubernetes
  hosts: workers, masters
  become: yes
  tasks:
    - name: Update apt cache and upgrade all packages
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist

    - name: Install prerequisite packages
      ansible.builtin.apt:
        name:
          - curl
          - apt-transport-https
          - git
          - wget
          - software-properties-common
          - lsb-release
          - ca-certificates
          - socat
        state: present

    - name: Disable swap now
      ansible.builtin.command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Remove swap entry from /etc/fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '^\s*(.+\s+swap\s+)'
        state: absent

    - name: Ensure br_netfilter module is loaded
      ansible.builtin.modprobe:
        name: br_netfilter
        state: present

    - name: Persist br_netfilter module on boot
      ansible.builtin.copy:
        dest: /etc/modules-load.d/k8s.conf
        content: "br_netfilter\n"
        owner: root
        group: root
        mode: "0644"

    - name: Apply Kubernetes sysctl settings
      ansible.builtin.sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
        state: present
        reload: yes
      loop:
        - { name: "net.bridge.bridge-nf-call-iptables", value: "1" }
        - { name: "net.ipv4.ip_forward", value: "1" }
        - { name: "net.bridge.bridge-nf-call-ip6tables", value: "1" }

    - name: Set hostname based on inventory
      ansible.builtin.hostname:
        name: "{{ inventory_hostname }}"

    - name: Update /etc/hosts with all nodes
      ansible.builtin.template:
        src: hosts.j2
        dest: /etc/hosts
        owner: root
        group: root
        mode: "0644"

    - name: Add authorized SSH key for ansible_user
      ansible.builtin.authorized_key:
        user: "{{ ansible_user_id | default(ansible_user) }}"
        state: present
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

    - name: Allow incoming TCP traffic on port 6443 through UFW (Kubernetes API)
      community.general.ufw:
        rule: allow
        port: '6443'
        proto: tcp
        comment: 'Allow Kubernetes API server'

    - name: Allow incoming TCP traffic on port 2379 through UFW (Kubernetes API)
      community.general.ufw:
        rule: allow
        port: '2379'
        proto: tcp
        comment: 'Allow Kubernetes API server'

    - name: Allow incoming TCP traffic on port 2380 through UFW (Kubernetes API)
      community.general.ufw:
        rule: allow
        port: '2380'
        proto: tcp
        comment: 'Allow Kubernetes API server'

    - name: Allow incoming TCP traffic on port 10250 through UFW (Kubelet API)
      community.general.ufw:
        rule: allow
        port: '10250'
        proto: tcp
        comment: 'Allow Kubelet API'
      when: "'workers' in group_names"

    - name: Allow incoming TCP traffic on port 10257 through UFW (Kubelet API)
      community.general.ufw:
        rule: allow
        port: '10257'
        proto: tcp
        comment: 'Allow Kubelet API'
      when: "'workers' in group_names"

    - name: Allow incoming TCP traffic on port 10259 through UFW (Kubelet API)
      community.general.ufw:
        rule: allow
        port: '10259'
        proto: tcp
        comment: 'Allow Kubelet API'
      when: "'workers' in group_names"