---
- name: Instalar kubectl para interactuar con un clúster de Kubernetes
  hosts: localhost
  connection: local
  become: yes
  vars:
    kubernetes_apt_repo_version: "v1.30"
    kubectl_version_pin: "1.30.2-1.1"

    kubernetes_gpg_key_path: "/etc/apt/keyrings/kubernetes-apt-keyring.gpg"
    kubernetes_source_list_path: "/etc/apt/sources.list.d/kubernetes.list"

  tasks:
    - name: 1. Asegurar que el directorio de keyrings exista
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: 2. Añadir la clave GPG del repositorio de Kubernetes
      ansible.builtin.shell:
        cmd: >
          curl -fsSL "https://pkgs.k8s.io/core:/stable:/{{ kubernetes_apt_repo_version }}/deb/Release.key"
          | gpg --dearmor -o {{ kubernetes_gpg_key_path }}
      args:
        creates: "{{ kubernetes_gpg_key_path }}"

    - name: 3. Añadir el repositorio APT de Kubernetes
      ansible.builtin.apt_repository:
        repo: "deb [signed-by={{ kubernetes_gpg_key_path }}] https://pkgs.k8s.io/core:/stable:/{{ kubernetes_apt_repo_version }}/deb/ /"
        state: present
        filename: "kubernetes"
        update_cache: yes

    - name: 4. Instalar kubectl en la versión especificada
      ansible.builtin.apt:
        name: "kubectl={{ kubectl_version_pin }}"
        state: present
        allow_downgrade: yes

    - name: 5. Marcar kubectl para no ser actualizado automáticamente (hold)
      ansible.builtin.dpkg_selections:
        name: "kubectl"
        selection: hold

    - name: 6. Verificar la versión de kubectl instalada
      ansible.builtin.command: kubectl version --client
      register: kubectl_version_output
      changed_when: false

    - name: Mostrar la versión de kubectl
      ansible.builtin.debug:
        var: kubectl_version_output.stdout