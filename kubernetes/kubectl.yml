---
- name: Install Kubernetes CLI tools (kubelet, kubeadm, kubectl) via APT
  hosts: workers, masters
  become: yes
  vars:
    kubernetes_apt_repo_version: "v1.30"
    kubeadm_version_pin: "1.30.1-1.1"
    kubelet_version_pin: "1.30.1-1.1"
    kubectl_version_pin: "1.30.1-1.1"
    kubernetes_gpg_key_path: "/etc/apt/keyrings/kubernetes-apt-keyring.gpg"
    kubernetes_source_list_path: "/etc/apt/sources.list.d/kubernetes.list"

  tasks:
    # --- Preventive Cleanup Phase ---
    - name: Ensure /etc/apt/keyrings directory exists
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Ensure target Kubernetes GPG key path is clear before creation
      ansible.builtin.file:
        path: "{{ kubernetes_gpg_key_path }}"
        state: absent

    - name: Ensure target Kubernetes APT source file is clear before creation
      ansible.builtin.file:
        path: "{{ kubernetes_source_list_path }}"
        state: absent

    # --- Kubernetes APT Repository Setup ---
    - name: Add Kubernetes GPG key
      ansible.builtin.shell:
        cmd: >
          curl -fsSL "https://pkgs.k8s.io/core:/stable:/{{ kubernetes_apt_repo_version }}/deb/Release.key"
          | gpg --dearmor -o {{ kubernetes_gpg_key_path }}
        creates: "{{ kubernetes_gpg_key_path }}"

    - name: Add Kubernetes APT repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by={{ kubernetes_gpg_key_path }}] https://pkgs.k8s.io/core:/stable:/{{ kubernetes_apt_repo_version }}/deb/ /"
        state: present
        filename: "kubernetes"
        update_cache: yes

    # --- Kubernetes Package Installation ---
    - name: Construct package versions for installation
      ansible.builtin.set_fact:
        kubelet_pkg: "kubelet{{ '=' + kubelet_version_pin if kubelet_version_pin else '' }}"
        kubeadm_pkg: "kubeadm{{ '=' + kubeadm_version_pin if kubeadm_version_pin else '' }}"
        kubectl_pkg: "kubectl{{ '=' + kubectl_version_pin if kubectl_version_pin else '' }}"

    - name: Install kubelet, kubeadm, and kubectl
      ansible.builtin.apt:
        name:
          - "{{ kubelet_pkg }}"
          - "{{ kubeadm_pkg }}"
          - "{{ kubectl_pkg }}"
        state: present
        update_cache: yes
        allow_downgrade: yes
        allow_change_held_packages: yes

    - name: Hold kubelet, kubeadm, and kubectl versions
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

    # --- Additional Configuration (Optional for /etc/hosts) ---
    - name: Add control plane entry to /etc/hosts (if IP is defined)
      ansible.builtin.lineinfile:
        path: /etc/hosts
        regexp: ".*\\s{{ control_plane_hostname }}$"
        line: "{{ control_plane_ip }} {{ control_plane_hostname }}"
        state: present
      when: control_plane_ip is defined and control_plane_hostname is defined

    # --- Verification (Optional) ---
    - name: Check kubelet version
      ansible.builtin.command: kubelet --version
      register: kubelet_version_output
      changed_when: false

    - name: Display kubelet version
      ansible.builtin.debug:
        var: kubelet_version_output.stdout
      when: kubelet_version_output.stdout is defined

    - name: Check kubeadm version
      ansible.builtin.command: kubeadm version -o short
      register: kubeadm_version_output
      changed_when: false

    - name: Display kubeadm version
      ansible.builtin.debug:
        var: kubeadm_version_output.stdout
      when: kubeadm_version_output.stdout is defined

    - name: Check kubectl version
      ansible.builtin.command: kubectl version --client
      register: kubectl_version_output
      changed_when: false

    - name: Display kubectl version
      ansible.builtin.debug:
        var: kubectl_version_output.stdout
      when: kubectl_version_output.stdout is defined

    - name: Ensure kubelet service is enabled and started (if service file was installed by package)
      ansible.builtin.systemd:
        name: kubelet
        enabled: yes
        state: started