---
- name: Configurar port-forwarding desde VPS a VPN clients
  hosts: vps
  become: yes
  vars:
    nat_interface: eth0            # o la interfaz que expone el VPS
    base_ext_port: 10000          # prefijo para puertos externos
    vpn_dest_port: 22             # puerto interno en cada cliente (SSH)
  tasks:
    - name: Habilitar IP forwarding
      sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        state: present
        reload: yes

    - name: Asegurar iptables-persistent
      apt:
        name: iptables-persistent
        state: present
        update_cache: true
      args:
        debconf:
          - name: iptables-persistent/autosave_v4
            value: "true"
            vtype: boolean

    - name: Generar regla NAT para cada cliente VPN
      ansible.posix.iptables:
        table: nat
        chain: PREROUTING
        in_interface: "{{ nat_interface }}"
        protocol: tcp
        destination_port: >-
          {{ base_ext_port + (hostvars[item].ansible_vpn_host.split('.')[-1] | int) }}
        jump: DNAT
        to_destination: >-
          {{ hostvars[item].ansible_vpn_host }}:{{ vpn_dest_port }}
        state: present
      loop: "{{ groups['vpn_clients'] }}"
      loop_control:
        label: "{{ item }} → {{ hostvars[item].ansible_vpn_host }}"

    - name: Asegurar masquerade para tráfico saliente
      ansible.posix.iptables:
        table: nat
        chain: POSTROUTING
        out_interface: "{{ nat_interface }}"
        jump: MASQUERADE
        state: present

    - name: Guardar reglas en /etc/iptables/rules.v4
      command: iptables-save > /etc/iptables/rules.v4
      changed_when: true

    - name: Mostrar resumen de forwards configurados
      debug:
        msg: >-
          Puerto externo {{ base_ext_port + (hostvars[item].ansible_vpn_host.split('.')[-1] | int) }}
          → {{ hostvars[item].ansible_vpn_host }}:{{ vpn_dest_port }}
      loop: "{{ groups['vpn_clients'] }}"
