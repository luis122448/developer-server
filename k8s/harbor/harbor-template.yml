# --- values.template.yaml ---
# Basic configuration template for Harbor on Kubernetes.
# Copy this file to 'my-values.yaml' and edit the required values.

# expose: How Harbor is exposed to the outside world.
# We will use an Ingress Controller.
expose:
  type: ingress
  # tls.enabled: If you have an SSL certificate, set this to 'true' and configure the 'secretName'.
  # If 'false', the Ingress will handle HTTP traffic.
  tls:
    enabled: true
    secretName: "harbor-bbg-ingress-tls"

  ingress:
    # hosts.core: The main hostname to access the Harbor UI and API.
    # YOU MUST CHANGE THIS to your domain or public IP.
    hosts:
      core: harbor.bbg.pe

    # className: The name of your IngressClass (e.g., "nginx", "traefik").
    # YOU MUST CHANGE THIS to the one you use in your cluster.
    className: "nginx"

# externalURL: The full public URL of Harbor. It must match the Ingress host.
# YOU MUST CHANGE THIS.
externalURL: https://harbor.bbg.pe

# harborAdminPassword: The password for the 'admin' user.
# YOU MUST CHANGE THIS to a secure password.
harborAdminPassword: ""

# persistence: Configuration for persistent storage.
# This is crucial to avoid losing images and application data.
persistence:
  enabled: true
  resourcePolicy: "keep"
  # If you have a specific StorageClass, uncomment and set it.
  # Otherwise, it will use the default StorageClass of the cluster.
  persistentVolumeClaim:
    registry:
      storageClass: "nas-003"
      size: 50Gi
    jobservice:
      storageClass: "nas-003"
      size: 1Gi
    database:
      storageClass: "nas-003"
      size: 5Gi
    redis:
      storageClass: "nas-003"
      size: 1Gi
    trivy:
      storageClass: "nas-003"
      size: 5Gi

# Node selector for all Harbor components
portal:
  nodeSelector:
    kubernetes.io/arch: amd64
core:
  nodeSelector:
    kubernetes.io/arch: amd64
jobservice:
  nodeSelector:
    kubernetes.io/arch: amd64
registry:
  nodeSelector:
    kubernetes.io/arch: amd64
database:
  nodeSelector:
    kubernetes.io/arch: amd64
redis:
  nodeSelector:
    kubernetes.io/arch: amd64
trivy:
  nodeSelector:
    kubernetes.io/arch: amd64