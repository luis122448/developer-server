services:

  # Database Service (MariaDB)
  mariadbnextcloud:
    image: mariadb:10.11
    env_file:
      - ./.env
    container_name: nextcloud-database
    restart: always
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: $NEXTCLOUD_PASSWORD
      MYSQL_PASSWORD: $NEXTCLOUD_PASSWORD
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
    networks:
      - internal_network

  # Redis Service (Cache)
  redisnextcloud:
    image: redis:alpine
    container_name: nextcloud-cache
    restart: always
    networks:
      - internal_network

  # Nextcloud Application Service
  nextcloud:
    image: nextcloud:28-apache
    env_file:
      - ./.env
    container_name: nextcloud-app
    restart: always
    volumes:
      - nextcloud_config:/var/www/html # Nextcloud config volume
      - /mnt/nas:/var/www/html/data   # Nextcloud user data volume (bind mount)
    environment:
      MYSQL_HOST: mariadbnextcloud # DB service hostname (must match DB service name)
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
      MYSQL_PASSWORD: $NEXTCLOUD_PASSWORD # DB password (must match DB service config)
      REDIS_HOST: redisnextcloud # Redis service hostname (must match Redis service name)
      # Trusted domains for accessing Nextcloud
      NEXTCLOUD_TRUSTED_DOMAINS: 'nas.lcalvo.com nas.bbg.pe localhost 127.0.0.1'
    depends_on: # Ensures DB and Redis start before the app
      - mariadbnextcloud
      - redisnextcloud
    networks:
      - internal_network # Connects to the internal network
    ports:
      # Map container port 80 (Nextcloud HTTP) to host port 8002.
      - "8002:80"
      # IMPORTANT: This exposes HTTP only. For HTTPS, use a reverse proxy.

volumes:
  db_data: # Volume for MariaDB data persistence
  nextcloud_config: # Volume for Nextcloud configuration persistence (NOT user data)

networks:
  internal_network:
    driver: bridge